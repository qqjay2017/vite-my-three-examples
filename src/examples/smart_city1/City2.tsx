/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";

import { useGLTF, useProgress } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { addGradColor } from "./addGradColor";
import { addSpread } from "./addSpread";
import { addLightLine } from "./addLightLine";
import { addToTopLine } from "./addToTopLine";
import FlyLine from "./FlyLine";
import FlyLineShader from "./FlyLineShader";
import LightRadar from "./LightRadar";
import LightWall from "./LightWall";
import Ground from "./Ground";
import { Physics } from "@react-three/cannon";
import GroundMaterial from "./Ground";

type GLTFResult = GLTF & {
  nodes: {
    Layerbuildings: THREE.Mesh;
    Layertopography: THREE.Mesh;
  };
  materials: {};
};

export function City2(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/model/city2.gltf") as GLTFResult;

  nodes.Layerbuildings.material = new THREE.MeshBasicMaterial({
    color: new THREE.Color('#3949AB'),
  });
  nodes.Layerbuildings.material.onBeforeCompile = function (shader) {
    shader.fragmentShader = shader.fragmentShader.replace(
      "#include <dithering_fragment>",
      `
    #include <dithering_fragment>
    //#end#
    `
    );
    addGradColor(shader, nodes.Layerbuildings);
    addSpread(shader);
    addLightLine(shader);
    addToTopLine(shader);
  };

  return (
    <group {...props} dispose={null} >
      {/* <group name="sun" position={[100, 50, 100]} rotation={[-Math.PI / 2, 0, 0]}>
        <pointLight intensity={10} />
      </group> */}

      <mesh
      
        geometry={nodes.Layerbuildings.geometry}
        material={nodes.Layerbuildings.material}
      />
      <mesh
        geometry={nodes.Layertopography.geometry}
       
      >
        <GroundMaterial />
        </mesh>
      <group name="LayerbuildingsBorderLine">
        <lineSegments material-color="#1A237E">
          <edgesGeometry args={[nodes.Layerbuildings.geometry]}></edgesGeometry>
        </lineSegments>
      </group>
      <group name="FlyLine">
        <FlyLine
          position={{
            x: 200,
            y: 50,
            z: -100,
          }}
          lineWidth={5}
        />
        <FlyLine
          position={{
            x: 100,
            y: 40,
            z: 100,
          }}
          duration={1}
          lineWidth={2}
        />
      </group>
      <group name="FlyLineShader">
        <FlyLineShader
          position={{
            x: 300,
            y: 100,
            z: 200,
          }}
          count={4000}
          color="red"
        />
        <FlyLineShader
          position={{
            x: -300,
            y: 100,
            z: -200,
          }}
          count={2000}
        />
      </group>
      <group name="LightRadar">
        <LightRadar
          position={{
            x: 318,
            y: 77,
            z: -279,
          }}
          duration={1}
          radius={30}
        />
        <LightRadar
          position={{
            x: -307,
            y: 90,
            z: -260,
          }}
          color="#FF9800"
          duration={1}
          radius={20}
        />
      </group>
      <group name="LightWall">
        <LightWall
          position={{
            x: 100,
            y: 20,
            z: 100,
          }}
          length={5}
        />
        <LightWall
          position={{
            x: -200,
            y: 50,
            z: -200,
          }}
          height={50}
          length={8}
          duration={0.5}
        />
      </group>
      {/* <group name="Ground">
        <Physics gravity={[0, -30, 0]}>
          <Ground />
        </Physics>
      </group> */}
    </group>
  );
}

useGLTF.preload("/model/city2.gltf");
